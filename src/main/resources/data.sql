DROP TABLE IF EXISTS SP_SENSOR;
DROP TABLE IF EXISTS SP_ROOM;
DROP TABLE IF EXISTS SP_WINDOW;

-- Create SP_SENSOR table
CREATE TABLE IF NOT EXISTS SP_SENSOR (
   id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(255) NOT NULL,
    sensor_value FLOAT NOT NULL,
    sensor_type VARCHAR(255) NOT NULL,
    PRIMARY KEY (id)
    );

-- add sample data in the SP_SENSOR table
INSERT INTO SP_SENSOR (id, name, sensor_value, sensor_type) VALUES (1, 'Temperature Sensor', 25.0, 'TEMPERATURE');
INSERT INTO SP_SENSOR (id, name, sensor_value, sensor_type) VALUES (2, 'Power Sensor', 45.0, 'POWER');
INSERT INTO SP_SENSOR (id, name, sensor_value, sensor_type) VALUES (3, 'Status Sensor', 1, 'STATUS');

-- Create SP_ROOM table
CREATE TABLE IF NOT EXISTS SP_ROOM (
 id BIGINT GENERATED BY DEFAULT AS IDENTITY,
name VARCHAR(255) NOT NULL,
    PRIMARY KEY (id)
    );

-- add sample data in the SP_ROOM table
INSERT INTO SP_ROOM (id, name) VALUES (1, 'Salon');
INSERT INTO SP_ROOM (id, name) VALUES (2, 'Storage');
INSERT INTO SP_ROOM (id, name) VALUES (3, 'Basement');

-- Create SP_WINDOW table
CREATE TABLE IF NOT EXISTS SP_WINDOW (
 id BIGINT GENERATED BY DEFAULT AS IDENTITY,
 name VARCHAR(255) NOT NULL,
    window_status VARCHAR(255) NOT NULL,
    room_id BIGINT,
    PRIMARY KEY (id),
    FOREIGN KEY (room_id) REFERENCES SP_ROOM(id) ON DELETE CASCADE
    );

-- add sample data in the SP_WINDOW table
INSERT INTO SP_WINDOW (id, name, window_status, room_id) VALUES (1, 'Front Window', 'OPEN', 1);
INSERT INTO SP_WINDOW (id, name, window_status, room_id) VALUES (2, 'Rear Window', 'CLOSED', 1);
